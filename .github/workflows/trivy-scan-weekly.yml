name: Trivy Scan Weekly

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Runs at 08:00 UTC on Mon

jobs:
  mysql:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "mysql"
      ADDON: true
    secrets: inherit

  postgresql:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "postgresql"
      ADDON: true
    secrets: inherit

  redis:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "redis"
      ADDON: true
    secrets: inherit

  mongodb:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "mongodb"
      ADDON: true
    secrets: inherit

  kafka:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "kafka"
      ADDON: true
    secrets: inherit
    
  clickhouse:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "clickhouse"
      ADDON: true
    secrets: inherit

  etcd:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "etcd"
      ADDON: true
    secrets: inherit

  rabbitmq:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "rabbitmq"
      ADDON: true
    secrets: inherit

  vanilla-postgresql:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "vanilla-postgresql"
      ADDON: true
    secrets: inherit

  zookeeper:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "zookeeper"
      ADDON: true
    secrets: inherit
    
  elasticsearch:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "elasticsearch"
      ADDON: true
    secrets: inherit

  influxdb:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "influxdb"
      ADDON: true
    secrets: inherit

  llm:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "llm"
      ADDON: true
    secrets: inherit

  loki:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "loki"
      ADDON: true
    secrets: inherit

  mariadb:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "mariadb"
      ADDON: true
    secrets: inherit

  milvus:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "milvus"
      ADDON: true
    secrets: inherit

  minio:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "minio"
      ADDON: true
    secrets: inherit

  neo4j:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "neo4j"
      ADDON: true
    secrets: inherit

  opensearch:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "opensearch"
      ADDON: true
    secrets: inherit

  orioledb:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "orioledb"
      ADDON: true
    secrets: inherit

  pulsar:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "pulsar"
      ADDON: true
    secrets: inherit

  qdrant:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "qdrant"
      ADDON: true
    secrets: inherit

  tidb:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "tidb"
      ADDON: true
    secrets: inherit

  victoria-metrics:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "victoria-metrics"
      ADDON: true
    secrets: inherit

  weaviate:
    uses: ./.github/workflows/trivy-scan.yml
    with:
      ITEM: "weaviate"
      ADDON: true
    secrets: inherit

  send-message:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ mysql, postgresql, redis, mongodb, kafka ]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: ./

      - name: send message
        run: |
          TEST_RESULT="${{ needs.mysql.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.postgresql.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.redis.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.mongodb.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.kafka.outputs.total-vulnerabilities }}"
          
          export TZ='Asia/Shanghai'
          date_ret=$(date +%Y-%m-%d-%T)
          test_title="[Weekly] Trivy Scan Vulnerabilities [${date_ret}]"
          
          python3 .github/utils/send_mesage.py \
              --send-type trivy \
              --url "${{ vars.TEST_BOT_WEBHOOK }}" \
              --title "$test_title" \
              --result "$TEST_RESULT"

  send-message-2:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ send-message, clickhouse, etcd, rabbitmq, vanilla-postgresql, zookeeper   ]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: ./

      - name: send message
        run: |
          TEST_RESULT="${TEST_RESULT}##${{ needs.clickhouse.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.etcd.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.rabbitmq.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.vanilla-postgresql.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.zookeeper.outputs.total-vulnerabilities }}"
          
          export TZ='Asia/Shanghai'
          date_ret=$(date +%Y-%m-%d-%T)
          test_title="[Weekly] Trivy Scan Vulnerabilities 2 [${date_ret}]"
          
          python3 .github/utils/send_mesage.py \
              --send-type trivy \
              --url "${{ vars.TEST_BOT_WEBHOOK }}" \
              --title "$test_title" \
              --result "$TEST_RESULT"

  send-message-3:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ send-message-2, elasticsearch, influxdb, llm, loki, mariadb, milvus, minio,
             neo4j, opensearch, orioledb, pulsar, qdrant, tidb, victoria-metrics, weaviate  ]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: ./

      - name: send message
        run: |
          TEST_RESULT="${{ needs.elasticsearch.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.influxdb.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.llm.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.loki.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.mariadb.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.milvus.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.minio.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.neo4j.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.opensearch.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.orioledb.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.pulsar.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.qdrant.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.tidb.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.victoria-metrics.outputs.total-vulnerabilities }}"
          TEST_RESULT="${TEST_RESULT}##${{ needs.weaviate.outputs.total-vulnerabilities }}"
          
          export TZ='Asia/Shanghai'
          date_ret=$(date +%Y-%m-%d-%T)
          test_title="[Weekly] Trivy Scan Vulnerabilities 3 [${date_ret}]"
          
          python3 .github/utils/send_mesage.py \
              --send-type trivy \
              --url "${{ vars.TEST_BOT_WEBHOOK }}" \
              --title "$test_title" \
              --result "$TEST_RESULT"