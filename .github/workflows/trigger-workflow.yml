name: TRIGGER-WORKFLOW

on:
  workflow_dispatch:
    inputs:
      GITHUB_REPO:
        description: "The github repo that triggers the workflow"
        type: string
        required: true
        default: ''
      BRANCH_NAME:
        description: "The branch name that triggers the workflow"
        type: string
        required: false
        default: 'main'
      WORKFLOW_ID:
        description: "The workflow id that triggers the workflow"
        type: string
        required: true
        default: ''
      APECD_REF:
        description: "The branch name of apecloud-cd"
        type: string
        required: false
        default: 'main'
      VERSION:
        description: "The release version"
        type: string
        required: false
        default: ''
      EXTRA_ARGS:
        description: "The extra args"
        type: string
        required: false
        default: ''
  workflow_call:
    inputs:
      GITHUB_REPO:
        description: "The github repo that triggers the workflow"
        type: string
        required: true
        default: ''
      BRANCH_NAME:
        description: "The branch name that triggers the workflow"
        type: string
        required: false
        default: 'main'
      WORKFLOW_ID:
        description: "The workflow id that triggers the workflow"
        type: string
        required: true
        default: ''
      APECD_REF:
        description: "The branch name of apecloud-cd"
        type: string
        required: false
        default: 'main'
      VERSION:
        description: "The release version"
        type: string
        required: false
        default: ''
      EXTRA_ARGS:
        description: "The extra args"
        type: string
        required: false
        default: ''


env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  trigger-workflow:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ inputs.GITHUB_REPO }} Code
        uses: actions/checkout@v4
        if: ${{ inputs.BRANCH_NAME != '' && inputs.GITHUB_REPO != '' }}
        with:
          repository: ${{ inputs.GITHUB_REPO }}
          token: ${{ env.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: check ${{ inputs.BRANCH_NAME }} exists
        continue-on-error: true
        if: ${{ inputs.BRANCH_NAME != '' && inputs.GITHUB_REPO != '' }}
        run: |
          HEAD_BRANCH_SHA="$(git rev-parse HEAD)"
          echo "HEAD_BRANCH_SHA:${HEAD_BRANCH_SHA}"
          echo "HEAD_BRANCH_SHA=${HEAD_BRANCH_SHA}" >> $GITHUB_ENV
          
          SHOW_REF_RET="2"
          echo "SHOW_REF_RET=${SHOW_REF_RET}" >> $GITHUB_ENV
          show_ref_ret_msg=$(git show-ref --exists refs/remotes/origin/${{ inputs.BRANCH_NAME }})
          SHOW_REF_RET=$?
          echo "SHOW_REF_RET:${SHOW_REF_RET}"
          echo "SHOW_REF_RET=${SHOW_REF_RET}" >> $GITHUB_ENV

      - uses: peterjgrainger/action-create-branch@v3.0.0
        if: ${{ env.SHOW_REF_RET != '0' && inputs.BRANCH_NAME != '' && inputs.GITHUB_REPO != '' }}
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          branch: '${{ inputs.BRANCH_NAME }}'
          sha: '${{ env.HEAD_BRANCH_SHA }}'

      - name: Checkout apecloud-cd Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: apecloud-cd
          token: ${{ env.GITHUB_TOKEN }}
          ref: ${{ inputs.APECD_REF }}

      - name: trigger-workflow
        run: |
          cmd="bash ${{ github.workspace }}/apecloud-cd/.github/utils/utils.sh --type 7 --github-token \"${{ env.GITHUB_TOKEN }}\" "
          if [[ ! -z "${{ inputs.GITHUB_REPO }}" ]]; then
              cmd=$cmd"--github-repo \"${{ inputs.GITHUB_REPO }}\" "
          fi

          if [[ ! -z "${{ inputs.WORKFLOW_ID }}" ]]; then
              cmd=$cmd"--workflow-id \"${{ inputs.WORKFLOW_ID }}\" "
          fi

          if [[ ! -z "${{ inputs.BRANCH_NAME }}" ]]; then
              cmd=$cmd"--branch-name \"${{ inputs.BRANCH_NAME }}\" "
          fi

          if [[ ! -z "${{ inputs.VERSION }}" ]]; then
              cmd=$cmd"--version \"${{ inputs.VERSION }}\" "
          fi

          if [[ ! -z "${{ inputs.EXTRA_ARGS }}" ]]; then
              cmd=$cmd"--extra-args \"${{ inputs.EXTRA_ARGS }}\" "
          fi

          eval "$cmd"
