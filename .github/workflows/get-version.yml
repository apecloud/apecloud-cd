name: Get Version

on:
  workflow_call:
    inputs:
      RELEASE_VERSION:
        description: 'The version of release'
        type: string
        required: false
        default: ''
      CONTENT:
        description: 'the request content'
        type: string
        required: false
        default: ''
      APECD_REF:
        description: "The ref of apecloud-cd"
        type: string
        required: false
        default: 'main'
      BOT_TYPE:
        description: 'the bot type (e.g. release/package)'
        type: string
        required: false
        default: 'release'
    outputs:
      release-version:
        description: "test result"
        value: ${{ jobs.get-version.outputs.release-version }}
      release-branch:
        description: "release branch"
        value: ${{ jobs.get-version.outputs.release-branch }}
#      kbcli-branch:
#        description: "kbcli branch"
#        value: ${{ jobs.get-version.outputs.kbcli-branch }}
#      kubeblocks-pkg-version:
#        description: "kubeblocks pkg version"
#        value: ${{ jobs.get-version.outputs.kubeblocks-pkg-version }}

env:
  GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  RELEASE_BOT_WEBHOOK: ${{ secrets.RELEASE_BOT_WEBHOOK }}
  PACKAGE_BOT_WEBHOOK: ${{ secrets.PACKAGE_BOT_WEBHOOK }}
  CUR_VERSION: ${{ vars.CURRENT_RELEASE_VERSION }}
  CUR_BRANCH: ${{ vars.CURRENT_RELEASE_BRANCH }}

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.get_version.outputs.release-version }}
      release-branch: ${{ steps.get_branch.outputs.release-branch }}
#      kbcli-branch: ${{ steps.get_kbcli_branch.outputs.kbcli-branch }}
#      kubeblocks-pkg-version: ${{ steps.get_kubeblocks_version.outputs.kubeblocks-pkg-version }}
    steps:
      - name: Checkout apecloud-cd Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: apecloud-cd
          ref: ${{ inputs.APECD_REF }}

      - name: get branch
        id: get_branch
        run: |
          RELEASE_BRANCH="main"
          if [[ "${{ inputs.RELEASE_VERSION }}" == "" && "${{ env.CUR_BRANCH }}" != "" ]]; then
              RELEASE_BRANCH="${{ env.CUR_BRANCH }}"
          fi
          echo release-branch=$RELEASE_BRANCH >> $GITHUB_OUTPUT

      - name: get version
        id: get_version
        run: |
          cmd="bash apecloud-cd/.github/utils/webhook_utils.sh --type 3 \
              --github-token ${{ env.GH_TOKEN }} \
              --github-repo ${{ github.repository }} "
          
          if [[ -n "${{ inputs.CONTENT }}" ]]; then
              cmd="${cmd} --content '${{ inputs.CONTENT }}' "
          fi
          
          if [[ -n "${{ inputs.RELEASE_VERSION }}" ]]; then
              cmd="${cmd} --version '${{ inputs.RELEASE_VERSION }}' "
          fi
          
          if [[ "${{ inputs.BOT_TYPE }}" == "package" ]]; then
              if [[ -n "${{ env.PACKAGE_BOT_WEBHOOK }}" ]]; then
                  cmd="${cmd} --bot-webhook '${{ env.PACKAGE_BOT_WEBHOOK }}' "
              fi
          else
              if [[ -n "${{ env.RELEASE_BOT_WEBHOOK }}" ]]; then
                  cmd="${cmd} --bot-webhook '${{ env.RELEASE_BOT_WEBHOOK }}' "
              fi
          fi
          
          if [[ -n "${{ env.CUR_VERSION }}" ]]; then
              cmd="${cmd} --current-version '${{ env.CUR_VERSION }}' "
          fi
        
          echo "$cmd"
          RELEASE_VERSION=$(eval "$cmd")
          echo release-version=$RELEASE_VERSION >> $GITHUB_OUTPUT
          if [[ -z "${RELEASE_VERSION}" || "${RELEASE_VERSION}" ==  *"code"*"data"*"msg"* ]]; then
              exit 1
          fi

#      - name: Checkout apecloud-cd Code
#        if: ${{ github.repository == 'apecloud/apecloud' && contains(inputs.CONTENT, 'kbcli') }}
#        uses: actions/checkout@v4
#        with:
#          repository: apecloud/apecloud-cd
#          path: apecloud-cd
#          ref: ${{ inputs.APECD_REF }}
#
#      - name: get kbcli branch
#        if: ${{ github.repository == 'apecloud/apecloud' && contains(inputs.CONTENT, 'kbcli') }}
#        id: get_kbcli_branch
#        run: |
#          cmd="bash apecloud-cd/.github/utils/webhook_utils.sh --type 4 --content '${{ inputs.CONTENT }}' "
#          echo "$cmd"
#          KBCLI_BRANCH=$(eval "$cmd")
#          echo kbcli-branch=$KBCLI_BRANCH >> $GITHUB_OUTPUT
#
#      - name: Checkout kbcli Code
#        if: ${{ github.repository == 'apecloud/apecloud' && contains(inputs.CONTENT, 'kbcli') }}
#        uses: actions/checkout@v4
#        with:
#          repository: apecloud/kbcli
#          path: kbcli
#          ref: ${{ steps.get_kbcli_branch.outputs.kbcli-branch }}
#
#      - name: get kbcli gomod kubeblocks pkg version
#        if: ${{ github.repository == 'apecloud/apecloud' && contains(inputs.CONTENT, 'kbcli') }}
#        id: get_kubeblocks_version
#        run: |
#          KUBEBLOCKS_PKG_VERSION=$(cat kbcli/go.mod | grep "github.com/apecloud/kubeblocks" | awk 'NR==1{print $2}')
#          echo kubeblocks-pkg-version=$KUBEBLOCKS_PKG_VERSION >> $GITHUB_OUTPUT
