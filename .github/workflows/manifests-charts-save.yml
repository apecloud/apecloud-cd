name: Manifests Charts Save

on:
  workflow_dispatch:
    inputs:
      MANIFESTS_FILE:
        description: "The file path to save"
        type: string
        required: true
        default: ''
      RELEASE_VERSION:
        description: 'The version of release'
        type: string
        required: false
        default: ''
      GITHUB_REPO:
        description: "The github repo to save"
        type: string
        required: false
        default: ''
      GITHUB_REF:
        description: "The github repo ref to save"
        type: string
        required: false
        default: 'main'
      APECD_REF:
        description: "The branch name of apecloud-cd"
        type: string
        required: false
        default: 'main'
      CHARTS_NAME:
        description: "The charts package name to save"
        type: string
        required: false
        default: 'kubeblocks-enterprise'
      BOT_TYPE:
        description: 'The bot type (e.g. release/package)'
        type: string
        required: false
        default: 'package'
  workflow_call:
    inputs:
      MANIFESTS_FILE:
        description: "The file path to save"
        type: string
        required: true
        default: ''
      RELEASE_VERSION:
        description: 'The version of release'
        type: string
        required: false
        default: ''
      GITHUB_REPO:
        description: "The github repo to save"
        type: string
        required: false
        default: ''
      GITHUB_REF:
        description: "The github repo ref to save"
        type: string
        required: false
        default: 'main'
      APECD_REF:
        description: "The branch name of apecloud-cd"
        type: string
        required: false
        default: 'main'
      CHARTS_NAME:
        description: "The charts package name to save"
        type: string
        required: false
        default: 'kubeblocks-enterprise'
      BOT_TYPE:
        description: 'The bot type (e.g. release/package)'
        type: string
        required: false
        default: 'package'


run-name: save chart ${{ inputs.CHARTS_NAME }} ${{ inputs.RELEASE_VERSION }}

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  OSS_KEY_ID: ${{ secrets.OSS_KEY_ID }}
  OSS_KEY_SECRET: ${{ secrets.OSS_KEY_SECRET }}
  OSS_ENDPOINT: "oss-cn-zhangjiakou.aliyuncs.com"
  OSS_BUCKET: "kubeblocks-oss"
  HELM_VERSION: "v3.15.4"
  CHART_PROJECT_ID: ${{ secrets.GITLAB_PROJECT_ID }}
  CHART_ACCESS_USER: ${{ secrets.GITLAB_ACCESS_USER }}
  CHART_ACCESS_TOKEN: ${{ secrets.GITLAB_ACCESS_TOKEN }}

jobs:
  save-charts:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.save-charts.outputs.release-version }}
    steps:
      - name: Checkout Code
        if: ${{ inputs.GITHUB_REPO == '' }}
        uses: actions/checkout@v4

      - name: Checkout ${{ inputs.GITHUB_REPO }} Code
        if: ${{ inputs.GITHUB_REPO != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.GITHUB_REPO }}
          path: ./
          token: ${{ env.GITHUB_TOKEN }}
          ref: ${{ inputs.GITHUB_REF }}

      - name: Checkout apecloud-cd Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: apecloud-cd
          token: ${{ env.GITHUB_TOKEN }}
          ref: ${{ inputs.APECD_REF }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: manifests charts save
        id: save-charts
        run: |
          MANIFESTS_FILE="${{ inputs.MANIFESTS_FILE }}"
          RELEASE_VERSION="${{ inputs.RELEASE_VERSION }}"
          if [[ -z "${RELEASE_VERSION}" && -f ${MANIFESTS_FILE} ]]; then
              RELEASE_VERSION="$(yq e ".kubeblocks-cloud[0].version"  ${MANIFESTS_FILE})"
          fi
          echo "release-version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          
          bash ${{ github.workspace }}/apecloud-cd/.github/utils/manifests_charts_save.sh \
              "${MANIFESTS_FILE}" "${RELEASE_VERSION}"

      - uses: manyuanrong/setup-ossutil@v2.0
        with:
          access-key-id: "${{ env.OSS_KEY_ID }}"
          access-key-secret: "${{ env.OSS_KEY_SECRET }}"
          endpoint: "${{ env.OSS_ENDPOINT }}"

      - name: Upload charts to oss
        id: upload_to_oss
        run: |
          CHART_PKG_NAME="${{ inputs.CHARTS_NAME }}-charts-${{ steps.save-charts.outputs.release-version }}.tar.gz"
          ossutil cp -rf ./${CHART_PKG_NAME} oss://${{ env.OSS_BUCKET }}/charts/${CHART_PKG_NAME}
          upload_ret=$?
          if [[ $upload_ret -eq 0 ]]; then
              echo "upload ${CHART_PKG_NAME} to oss successfully"
          else
              exit 1
          fi

  save-result:
    runs-on: ubuntu-latest
    needs: [ save-charts ]
    if: ${{ always() }}
    outputs:
      chart-pkg-name: ${{ steps.get_save_result.outputs.chart_pkg_name }}
      save-result: ${{ steps.get_save_result.outputs.save_result }}
    steps:
      - name: get save result
        id: get_save_result
        run: |
          SAVE_RESULT="error"
          CHART_PKG_NAME="${{ inputs.CHARTS_NAME }}-charts-${{ needs.save-charts.outputs.release-version }}.tar.gz"
          if [[ "${{ needs.save-charts.result }}" == "success" ]]; then
              SAVE_RESULT="success"
              CHART_PKG_NAME="http://kubeblocks-oss.${{ env.OSS_ENDPOINT }}/charts/${CHART_PKG_NAME}"
          fi
          echo 'save_result='$SAVE_RESULT >> $GITHUB_OUTPUT
          echo 'chart_pkg_name='${CHART_PKG_NAME} >> $GITHUB_OUTPUT

  send-message:
    needs: [ save-result ]
    if: ${{ always() }}
    uses: ./.github/workflows/feishui-message.yml
    with:
      TYPE: "2"
      CONTENT: "save chart ${{ needs.save-result.outputs.chart-pkg-name }} ${{ needs.save-result.outputs.save-result }}"
      BOT_TYPE: "${{ inputs.BOT_TYPE }}"
    secrets: inherit
