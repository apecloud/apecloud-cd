name: Test Cloud On K3S

on:
  workflow_call:
    inputs:
      release-version:
        description: 'apecloud release version'
        type: string
        required: false
        default: 'latest'
      kubeblocks-version:
        description: 'kubeblocks release version'
        type: string
        required: false
        default: 'latest'
      test-type:
        description: 'test type'
        type: string
        required: false
        default: '0'
      test-type-name:
        description: 'test type name'
        type: string
        required: false
        default: ''
      test-args:
        description: 'test args'
        type: string
        required: false
        default: ''
      k3s-version:
        description: 'k3s cluster version (e.g. 1.30)'
        type: string
        required: false
        default: '1.30'
      testinfra-branch:
        description: 'testinfra branch name'
        type: string
        required: false
        default: 'main'
      e2etest-branch:
        description: 'e2etest branch name'
        type: string
        required: false
        default: 'main'
      apecloud-branch:
        description: 'apecloud branch name'
        type: string
        required: false
        default: 'main'
    outputs:
      test-result:
        description: "e2e test result"
        value: "${{ jobs.cloud-test-k3s.outputs.test-result }}"
      test-type:
        description: "e2e test type"
        value: "${{ jobs.cloud-test-k3s.outputs.test-type }}"

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  HELM_VERSION: v3.15.4
  K3D_NAME: default
  REGION: us-central1
  AUTH0_ID_TOKEN: ${{ secrets.AUTH0_ID_TOKEN }}
  ACK_KUBECONFIG: ${{ secrets.ACK_KUBECONFIG }}

permissions:
  id-token: write
  contents: read

jobs:
  cloud-test-k3s:
    name: run ${{ inputs.test-type-name }}
    runs-on: ubuntu-latest
    outputs:
      deploy-result: ${{ steps.deploy_cloud.outputs.deploy-result }}
      test-result: ${{ steps.test_result.outputs.test-result }}
      test-type: ${{ steps.test_result.outputs.test-type }}
    steps:
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.28.3"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: curl cloud server api
        run: |
          curl -X GET "https://api-dev.apecloud.cn/api/v1/user" -H  "accept: application/json" -H  "authorization:Bearer  ${AUTH0_ID_TOKEN}"

      - name: Checkout e2etest Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/e2etest
          path: e2etest
          ref: ${{ inputs.e2etest-branch }}
          token: ${{ env.GITHUB_TOKEN }}

      - name: Configure ACK Context
        id: cloud_env
        run: |
          mkdir -p $HOME/.kube
          touch $HOME/.kube/config
          echo '${{ env.ACK_KUBECONFIG }}' > $HOME/.kube/config

      - name: run e2e test
        id: run_e2e_test
        run: |
          cd e2etest
          make test-e2e-apecloud URL=https://api-dev.apecloud.cn ORG_NAME=test-1 | tee ./make_run.log
          passed=$(grep -oE "[0-9]+ Passed" ./make_run.log)
          failed=$(grep -oE "[0-9]+ Failed" ./make_run.log)
          pending=$(grep -oE "[0-9]+ Pending" ./make_run.log)
          skipped=$(grep -oE "[0-9]+ Skipped" ./make_run.log)
          type=${{ inputs.test-type }}
          summary="$passed | $failed | $pending | $skipped"
          echo "summary=$summary"
          echo "type=$type"
      - name: return cloud e2e test result
        id: test_result
        if: ${{ always() }}
        run: |
          echo "test-result=$summary" >> $GITHUB_OUTPUT
          echo "test-type=$type" >> $GITHUB_OUTPUT
          
