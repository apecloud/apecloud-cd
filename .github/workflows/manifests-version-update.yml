name: Manifests Version Update

on:
  workflow_dispatch:
    inputs:
      MANIFESTS_FILE:
        description: "The file path to update"
        type: string
        required: true
        default: ''
      RELEASE_VERSION:
        description: 'The version of release'
        type: string
        required: false
        default: ''
      GITHUB_REPO:
        description: "The github repo to save"
        type: string
        required: false
        default: ''
      GITHUB_REF:
        description: "The github repo ref to save"
        type: string
        required: false
        default: 'main'
      APECD_REF:
        description: "The branch name of apecloud-cd"
        type: string
        required: false
        default: 'main'
  workflow_call:
    inputs:
      MANIFESTS_FILE:
        description: "The file path to update"
        type: string
        required: true
        default: ''
      RELEASE_VERSION:
        description: 'The version of release'
        type: string
        required: false
        default: ''
      GITHUB_REPO:
        description: "The github repo to save"
        type: string
        required: false
        default: ''
      GITHUB_REF:
        description: "The github repo ref to save"
        type: string
        required: false
        default: 'main'
      APECD_REF:
        description: "The branch name of apecloud-cd"
        type: string
        required: false
        default: 'main'


run-name: update manifests ${{ inputs.RELEASE_VERSION }}

env:
  GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  update-manifests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref_name }} Code
        if: ${{ inputs.GITHUB_REPO == '' }}
        uses: actions/checkout@v4

      - name: Checkout ${{ inputs.GITHUB_REPO }} Code
        if: ${{ inputs.GITHUB_REPO != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.GITHUB_REPO }}
          path: ./
          token: ${{ env.GH_TOKEN }}
          ref: ${{ inputs.GITHUB_REF }}

      - name: Checkout apecloud-cd Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: apecloud-cd
          token: ${{ env.GH_TOKEN }}
          ref: ${{ inputs.APECD_REF }}

      - name: get ref name
        id: get_ref_name
        run: |
          GITHUB_REF_NAME="${{ inputs.GITHUB_REF }}"
          if [[ -z "${GITHUB_REF_NAME}" ]]; then
              GITHUB_REF_NAME="${{ github.ref_name }}"
          fi
          echo github_ref_name="${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: get release commit
        id: get_release_commit
        run: |
          MANIFESTS_FILE="${{ inputs.MANIFESTS_FILE }}"
          RELEASE_VERSION="${{ inputs.RELEASE_VERSION }}"
          COMMIT_SHA="$(git rev-parse HEAD)"
          
          echo "update manifests version to ${RELEASE_VERSION}"
          bash ${{ github.workspace }}/apecloud-cd/.github/utils/manifests_version_update.sh "${MANIFESTS_FILE}" "${RELEASE_VERSION}"
          echo "update manifests version to ${RELEASE_VERSION} done"
          
          FILE_CHANGES=`git diff --name-only ${COMMIT_SHA}`
          if [[ ! -z "$FILE_CHANGES" ]]; then
              echo $FILE_CHANGES
              git config --local user.name "$GITHUB_ACTOR"
              git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
              git commit -a -m "chore: auto update manifests file version to ${RELEASE_VERSION} "
          fi
          echo file_changes=$FILE_CHANGES >> $GITHUB_OUTPUT
          
          RELEASE_COMMIT="$(git rev-parse HEAD)"
          echo 'RELEASE_COMMIT='${RELEASE_COMMIT} >> $GITHUB_ENV
  
      - name: push changes to new branch
        if: ${{ steps.get_ref_name.outputs.github_ref_name == 'main' && steps.get_release_commit.outputs.file_changes }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ env.GH_TOKEN }}
          branch: support/auto-update-manifests-file-version-${{ env.RELEASE_COMMIT }}

      - name: auto create pr head new branch
        if: ${{ steps.get_ref_name.outputs.github_ref_name == 'main' && steps.get_release_commit.outputs.file_changes }}
        run: |
          gh pr create --head "support/auto-update-manifests-file-version-${{ env.RELEASE_COMMIT }}" --title "chore: auto update manifests file version to ${RELEASE_VERSION}" --body ""

      - name: push changes
        uses: ad-m/github-push-action@master
        if: ${{ github.ref_name != 'main' && steps.get_release_commit.outputs.file_changes }}
        with:
          github_token: ${{ env.GH_TOKEN }}
          branch: ${{ steps.get_ref_name.outputs.github_ref_name }}
