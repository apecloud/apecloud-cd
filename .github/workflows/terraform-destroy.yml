name: Terrafrom Destroy

on:
  workflow_call:
    inputs:
      cloud-provider:
        description: 'cloud k8s cluster provider (e.g. eks/gke/aks)'
        type: string
        required: false
        default: 'eks'
      artifact-name:
        description: 'terraform artifact name'
        type: string
        required: false
        default: ''
      region:
        description: 'k8s region name'
        type: string
        required: false
        default: 'cn-northwest-1'

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - uses: aws-actions/configure-aws-credentials@v4
        if: ${{ inputs.cloud-provider == 'eks' && env.AWS_ACCESS_KEY_ID != '' && env.AWS_SECRET_ACCESS_KEY != '' }}
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: "${{ inputs.region }}"

      - if: ${{ inputs.cloud-provider == 'gke' && env.GOOGLE_CREDENTIALS != '' }}
        id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ env.GOOGLE_CREDENTIALS }}'

      - if: ${{ inputs.cloud-provider == 'aks' && env.AZURE_CREDENTIALS != '' }}
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: get deploy path
        id: get_deploy_path
        run: |
          DEPLOY_PATH=""
          if [[ "${{ inputs.cloud-provider }}" == "eks" ]]; then
              DEPLOY_PATH="./aws/eks-default-vpc"
          elif [[ "${{ inputs.cloud-provider }}" == "gke" ]]; then
              DEPLOY_PATH="./gcp/gke-cicd"
          elif [[ "${{ inputs.cloud-provider }}" == "aks" ]]; then
              DEPLOY_PATH="./gcp/aks-cicd"
          fi
          echo "deploy-path:"$DEPLOY_PATH
          echo deploy-path=${DEPLOY_PATH} >> $GITHUB_OUTPUT

      - name: checkout cloud-provider
        uses: actions/checkout@v4
        with:
          repository: apecloud/cloud-provider
          ref: "apecd-deploy"
          path: ./
          token: ${{ env.GITHUB_TOKEN }}

      - name: download artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ steps.get_deploy_path.outputs.deploy-path }}

      - name: terraform destroy
        run: |
          cd ${{ steps.get_deploy_path.outputs.deploy-path }}
          bash run.sh --type 2

  remove-artifact:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: terraform-destroy
    steps:
      - name: remove artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: ${{ inputs.artifact-name }}
