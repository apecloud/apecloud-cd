name: Release Image Manifest

on:
  workflow_call:
    inputs:
      IMG:
        description: "The URL to use building/pushing image targets (e.g. apecloud/kubeblocks)"
        type: string
        required: false
        default: ''
      VERSION:
        description: "The tag name of image (default: latest)"
        type: string
        required: false
        default: ''
      REMOVE_PREFIX:
        description: "Enable remove prefix v  (default: true)"
        type: boolean
        required: false
        default: true
  workflow_dispatch:
    inputs:
      IMG:
        description: "The URL to use building/pushing image targets (e.g. apecloud/kubeblocks)"
        type: string
        required: false
        default: ''
      VERSION:
        description: "The tag name of image (default: latest)"
        type: string
        required: false
        default: ''
      REMOVE_PREFIX:
        description: "Enable remove prefix v  (default: true)"
        type: boolean
        required: false
        default: true

run-name:  Release Image Manifest ${{ inputs.IMG }}:${{ inputs.VERSION }}


env:
  DOCKER_REGISTRY_URL: docker.io
  ALIYUN_REGISTRY_URL: apecloud-registry.cn-zhangjiakou.cr.aliyuncs.com
  ALIYUN_REGISTRY_URL_NEW: infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com
  DOCKER_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
  ALIYUN_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
  ALIYUN_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
  ALIYUN_USER_NEW: ${{ secrets.ALIYUN_USER_NEW }}
  ALIYUN_PASSWORD_NEW: ${{ secrets.ALIYUN_PASSWORD_NEW }}
  GITHUB_USER: ${{ secrets.PERSONAL_ACCESS_USER }}
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  release-image:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    outputs:
      tag-name: ${{ steps.get_tag_name.outputs.TAG-NAME }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:master

      - name: remove v prefix
        id: get_tag_name
        shell: bash
        run: |
          tag_name="${{ inputs.VERSION }}"
          if [[ "$tag_name" == "v"*  && "${{ inputs.REMOVE_PREFIX }}" == "true" ]]; then
              tag_name="${tag_name/v/}"
          fi
          echo TAG-NAME=$tag_name >> $GITHUB_OUTPUT

      - if: ${{ env.DOCKER_USER != '' && env.DOCKER_PASSWORD != '' }}
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASSWORD }}

      - if: ${{ env.DOCKER_USER != '' && env.DOCKER_PASSWORD != '' }}
        name: Create and Push manifest to Docker Hub
        run: |
          docker manifest create \
              ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-amd64 \
              ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-arm64
          
          docker manifest annotate \
              ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-amd64 \
              --os linux --arch amd64
          
          docker manifest annotate \
              ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-arm64 \
              --os linux --arch arm64
          
          docker manifest inspect ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}   
          
          docker manifest push ${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}

      - if: ${{ env.ALIYUN_USER != '' && env.ALIYUN_PASSWORD != '' }}
        name: Login to Aliyun Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ALIYUN_REGISTRY_URL }}
          username: ${{ env.ALIYUN_USER }}
          password: ${{ env.ALIYUN_PASSWORD }}

      - if: ${{ env.ALIYUN_USER != '' && env.ALIYUN_PASSWORD != '' }}
        name: Create and Push manifest to Aliyun Registry
        run: |
          docker manifest create \
              ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-amd64 \
              ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-arm64
          
          docker manifest annotate \
              ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-amd64 \
              --os linux --arch amd64
          
          docker manifest annotate \
              ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-arm64 \
              --os linux --arch arm64
          
          docker manifest inspect ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}
          
          docker manifest push ${{ env.ALIYUN_REGISTRY_URL }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}

      - if: ${{ env.ALIYUN_USER_NEW != '' && env.ALIYUN_PASSWORD_NEW != '' }}
        name: Login to Aliyun Registry New
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ALIYUN_REGISTRY_URL_NEW }}
          username: ${{ env.ALIYUN_USER_NEW }}
          password: ${{ env.ALIYUN_PASSWORD_NEW }}

      - if: ${{ env.ALIYUN_USER_NEW != '' && env.ALIYUN_PASSWORD_NEW != '' }}
        name: Create and Push manifest to Aliyun Registry New
        run: |
          docker manifest create \
              ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-amd64 \
              ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-arm64
          
          docker manifest annotate \
              ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-amd64 \
              --os linux --arch amd64
          
          docker manifest annotate \
              ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }} \
              ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}-arm64 \
              --os linux --arch arm64
          
          docker manifest inspect ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}
          
          docker manifest push ${{ env.ALIYUN_REGISTRY_URL_NEW }}/${{ inputs.IMG }}:${{ steps.get_tag_name.outputs.TAG-NAME }}

